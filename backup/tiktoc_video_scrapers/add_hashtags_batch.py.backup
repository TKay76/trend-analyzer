#!/usr/bin/env python3
"""
TikTok Creative Center - 배치 방식으로 해시태그 정보 추가
"""

import time
from playwright.sync_api import sync_playwright
import json
import re

def extract_hashtags_from_desc(desc):
    """
    비디오 설명에서 해시태그 추출
    """
    if not desc:
        return []
    
    hashtags = re.findall(r'#\w+', desc)
    return hashtags

def fetch_batch_video_details(video_ids, batch_size=10):
    """
    배치로 비디오 세부사항 수집
    """
    results = {}
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        try:
            for i in range(0, len(video_ids), batch_size):
                batch = video_ids[i:i+batch_size]
                print(f"  배치 {i//batch_size + 1}: {len(batch)}개 비디오 처리 중...")
                
                for video_id in batch:
                    try:
                        # 단일 비디오 API 호출
                        api_url = f"https://www.tiktok.com/api/recommend/embed_videos/?aid=1284&count=1&secUid=&cursor=0&web_id=&item_id={video_id}"
                        
                        response = page.request.get(api_url, timeout=5000)
                        if response.status == 200:
                            data = response.json()
                            
                            if data.get('itemList') and len(data['itemList']) > 0:
                                video = data['itemList'][0]
                                
                                # 해시태그 추출
                                desc = video.get('desc', '')
                                hashtags = extract_hashtags_from_desc(desc)
                                
                                # 추가 정보
                                author = video.get('author', {})
                                stats = video.get('statsV2', {})
                                
                                results[video_id] = {
                                    'hashtags': hashtags,
                                    'desc': desc,
                                    'author': author.get('uniqueId', ''),
                                    'play_count': stats.get('playCount', '0')
                                }
                                
                                print(f"    {video_id}: {len(hashtags)}개 해시태그")
                        
                    except Exception as e:
                        print(f"    {video_id}: 실패 - {e}")
                        results[video_id] = None
                    
                    # 짧은 딜레이
                    time.sleep(0.2)
                
                # 배치 간 딜레이
                time.sleep(1)
                
        except Exception as e:
            print(f"배치 처리 오류: {e}")
        
        finally:
            browser.close()
    
    return results

def add_hashtags_to_videos_batch():
    """
    배치 방식으로 해시태그 정보 추가
    """
    print("배치 방식으로 120개 비디오 해시태그 정보 추가...")
    
    # 통합 파일 읽기
    with open('tiktok_all_categories_120_videos_final.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    # 모든 비디오 ID 수집
    all_video_ids = []
    video_lookup = {}
    
    for category_name, category_data in data['categories'].items():
        videos = category_data.get('videos', [])
        for video in videos:
            video_id = video['video_id']
            all_video_ids.append(video_id)
            video_lookup[video_id] = video
    
    print(f"총 {len(all_video_ids)}개 비디오 ID 수집됨")
    
    # 배치로 해시태그 정보 수집
    print("\n해시태그 정보 수집 시작...")
    details_results = fetch_batch_video_details(all_video_ids, batch_size=5)
    
    # 결과 적용
    updated_count = 0
    for video_id, details in details_results.items():
        if details and video_id in video_lookup:
            video = video_lookup[video_id]
            video['hashtags'] = details['hashtags']
            video['desc'] = details['desc']
            video['author'] = details['author']
            video['play_count'] = details['play_count']
            updated_count += 1
        elif video_id in video_lookup:
            video = video_lookup[video_id]
            video['hashtags'] = []
            video['desc'] = ""
            video['author'] = ""
            video['play_count'] = "0"
    
    # 통계 업데이트
    data['scrape_info']['hashtags_added'] = True
    data['scrape_info']['hashtags_timestamp'] = time.strftime("%Y-%m-%d %H:%M:%S")
    data['scrape_info']['hashtags_success_count'] = updated_count
    
    # 결과 저장
    output_file = 'tiktok_all_categories_120_videos_with_hashtags.json'
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    
    print(f"\n{'='*50}")
    print(f"해시태그 정보 추가 완료!")
    print(f"{'='*50}")
    print(f"결과 파일: {output_file}")
    print(f"전체 비디오: {len(all_video_ids)}개")
    print(f"해시태그 수집 성공: {updated_count}개")
    print(f"성공률: {updated_count/len(all_video_ids)*100:.1f}%")
    
    return data

if __name__ == "__main__":
    add_hashtags_to_videos_batch()